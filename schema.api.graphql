schema {
    query: Query
    mutation: Mutation
}

type Query{
    getImageUploadUrl(extention: String, contentType: String): AWSURL!
    getMyTimeline(limit: Int!, nextToken: String): TweetsPage!
    getMyProfile: MyProfile!
    getProfile(screenName: String!): OtherProfile!
    getTweets(userId: ID!, limit: Int!, nextToken: String): TweetsPage!
    getLikes(userId: ID!, limit: Int!, nextToken:String): TweetsPage!
    getFolloweres(userId: ID!, limit: Int!, nextToken:String): ProfilesPage!
    getFollowings(userId: ID!, limit: Int!, nextToken:String): ProfilesPage!
}

type Mutation{
    editMyProfile(newProfile: ProfileInput!): MyProfile!
    tweet(text: String!): Tweet!
    like(tweetedId: ID!): Boolean!
    unlike(tweetedId: ID!): Boolean!
    retweet(tweetedId: ID!): Boolean!
    unretweet(tweetedId: ID!): Boolean!
    reply(tweetedId: ID!, text: String!): Reply!
    follow(userId: ID!): Boolean!
    unfollow(userId: ID!): Boolean!
}

input ProfileInput{
    name: String!
    imageUrl: AWSURL
    backgroundImageUrl: AWSURL
    bio: String
    location: String
    website: AWSURL
    birthdate: AWSDate
}

interface IProfile{
    id: ID!
    name: String!
    screenName: String!
    imageUrl: AWSURL
    backgroundImageUrl: AWSURL
    bio: String
    location: String
    website: AWSURL
    birthdate: AWSDate
    createdAt: AWSDateTime!
    tweets: TweetsPage!
    followersCount: Int!
    followingCount: Int!
    tweetsCount: Int!
    likesCount: Int!
}

interface ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime!
}

type MyProfile implements IProfile{
    id: ID!
    name: String!
    screenName: String!
    imageUrl: AWSURL
    backgroundImageUrl: AWSURL
    bio: String
    location: String
    website: AWSURL
    birthdate: AWSDate
    createdAt: AWSDateTime!
    tweets: TweetsPage!
    followersCount: Int!
    followingCount: Int!
    tweetsCount: Int!
    likesCount: Int!
}

type OtherProfile implements IProfile{
    id: ID!
    name: String!
    screenName: String!
    imageUrl: AWSURL
    backgroundImageUrl: AWSURL
    bio: String
    location: String
    website: AWSURL
    birthdate: AWSDate
    createdAt: AWSDateTime!
    tweets: TweetsPage!
    followersCount: Int!
    followingCount: Int!
    tweetsCount: Int!
    likesCount: Int!
    following: Boolean!
    followedBy: Boolean!
}

type Tweet implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime!
    text: String!
    replies: Int!
    likes: Int!
    retweets: Int!
    liked: Boolean!
    retweeted: Boolean!
}

type Reply implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime!
    inReplyToTweet: ITweet!
    inReplyToUser: IProfile!
    text: String!
    replies: Int!
    likes: Int!
    retweets: Int!
    liked: Boolean!
    retweeted: Boolean!
}

type ReTweet implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime!
    retweetOf: ITweet!
}

type TweetsPage{
    tweets: [ITweet!]
    nextToken: String
}

type ProfilesPage{
    profiles: [IProfile!]
    nextToken: String
}